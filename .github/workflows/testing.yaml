name: Run Jest Tests and Generate Coverage Report

on:
  pull_request:
    branches:
      - main  # Run this workflow only on pull requests targeting the 'main' branch

jobs:
  test:
    runs-on: ubuntu-latest  # Use the latest version of Ubuntu for the job

    permissions:
      contents: write  # Provide write permissions to allow changes to repository contents, such as reporting coverage
      pull-requests: write  # Added to allow commenting on PRs
      checks: write # As per error message

    # env:
    #   ACTIONS_STEP_DEBUG: true  # Enable detailed debug logging to provide more verbose output during the workflow

    steps:
    # Step 1: Checkout the repository code
    - name: Checkout repository
      uses: actions/checkout@v3  # This action checks out the repository code so it can be used in the job

    # Step 2: Set up Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v3  # This action sets up the Node.js environment
      with:
        node-version: '18'  # Specify the version of Node.js to use, adjust this to match your project's needs

    # Step 3: Install project dependencies
    - name: Install dependencies
      run: npm install  # Install all required npm packages listed in package.json
      working-directory: ./server  # Specify the directory where package.json is located

    # Step 4: Run Jest tests with coverage
    - name: Run Jest with Coverage
      run: npm test -- --coverage  # Run the tests and generate a coverage report
      working-directory: ./server  # Ensure the tests are run from the correct directory (where your server and tests are located)

    # # Debugging Step From Earlier: List the contents of the coverage directory for debugging purposes
    # - name: List coverage directory
    #   run: ls -R ./server/coverage  # Recursively list all files in the coverage directory to ensure coverage files were generated

    # Step 6: Generate Jest Coverage Report
    - name: Generate Jest Coverage Report
      uses: ArtiomTr/jest-coverage-report-action@v2.3.1  # Use the Jest coverage report action, latest version
      with:
        # github-token: ${{ secrets.GITHUB_TOKEN }}  # Use the default GitHub token for authentication
        # coverage-file: ./server/coverage/clover.xml  # Specify the path to the Clover XML coverage report generated by Jest
        working-directory: ./server